let t=(e=new Map,{get:t=>e.get(t),set:(t,n)=>(e.set(t,n),n)});var e;let n="https://cdn.skypack.dev",i={pin:!0,min:!0};async function r(e,r={}){if(r={...i,...r},e.startsWith(".")||e.startsWith("https://")||e.startsWith("http://"))return e;let[a,o="latest"]=e.split("@").filter((t=>t.length));a="@"===e.charAt(0)?`@${a}`:a;let l=`${a}@${o}`;return r.pin?await async function(e,n=!0){return t.get(e)||t.set(e,(await s(e))[n?"minified":"normal"])}(l,r.min):`${n}/${l}`}async function s(t){try{const e=await fetch(`${n}/${t}`),i=await e.text();let r=(/Normal:\s([\S]+)/g.exec(i)||["",""])[1],a=(/Minified:\s([\S]+)/g.exec(i)||["",""])[1];if("Not"===a||"Not"===r){let e=n+(/export\s\*\sfrom\s'([^\s;']+)/g.exec(i)||["",""])[1];return await fetch(e),s(t)}if(!(r&&a&&r.length&&a.length))throw"Invalid URL found";return{normal:r,minified:a}}catch(t){return console.log("Error fetching module from skypack. Returning empty strings"),console.log(t),{normal:"",minified:""}}}export{r as skypin};
