let t=(e=new Map,{get:t=>e.get(t),set:(t,i)=>(e.set(t,i),i)});var e;let i="https://cdn.skypack.dev",n={pinned:!0,minified:!0};async function r(e,r={}){if(r={...n,...r},e.startsWith(".")||e.startsWith("https://")||e.startsWith("http://"))return e;let[s,l="latest"]=e.split("@").filter((t=>t.length));s="@"===e.charAt(0)?`@${s}`:s;let c=`${s}@${l}`;return r.pinned?await async function(e,i=!0){return t.get(e)||t.set(e,(await a(e))[i?"minified":"normal"])}(c,r.minified):`${i}/${c}`}async function a(t){try{const e=await fetch(`${i}/${t}`);let n=e.headers.get("x-import-status"),r=e.headers.get("x-import-url"),s=e.headers.get("x-pinned-url")||r;if("NEW"===n&&r)return await fetch(`${i}${r}`),await a(t);let l=s.lastIndexOf("/");return{normal:`${i}${s}`,minified:`${i}${s.slice(0,l)+"/min"+s.slice(l)}`}}catch(t){return console.log("Error fetching module from skypack. Returning empty strings"),console.log(t),{normal:"",minified:""}}}export{r as skypin};
